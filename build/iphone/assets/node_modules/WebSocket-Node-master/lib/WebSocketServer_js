var extend=require("./utils").extend,util=require("util"),EventEmitter=require("events").EventEmitter,WebSocketRequest=require("./WebSocketRequest"),Constants=require("./Constants"),WebSocketServer=function WebSocketServer(e){this._handlers={upgrade:this.handleUpgrade.bind(this),requestAccepted:this.handleRequestAccepted.bind(this)},this.connections=[],e&&this.mount(e)};util.inherits(WebSocketServer,EventEmitter),WebSocketServer.prototype.mount=function(e){if(this.config={httpServer:null,maxReceivedFrameSize:65536,maxReceivedMessageSize:1048576,fragmentOutgoingMessages:!0,fragmentationThreshold:16384,keepalive:!0,keepaliveInterval:2e4,dropConnectionOnKeepaliveTimeout:!0,keepaliveGracePeriod:1e4,useNativeKeepalive:!1,assembleFragments:!0,autoAcceptConnections:!1,disableNagleAlgorithm:!0,closeTimeout:5e3},extend(this.config,e),!this.config.httpServer)throw Error("You must specify an httpServer on which to mount the WebSocket server.");this.config.httpServer.on("upgrade",this._handlers.upgrade)},WebSocketServer.prototype.unmount=function(){this.config.httpServer.removeListener("upgrade",this._handlers.upgrade)},WebSocketServer.prototype.closeAllConnections=function(){this.connections.forEach(function(e){e.close()})},WebSocketServer.prototype.broadcast=function(e){Buffer.isBuffer(e)?this.broadcastBytes(e):"function"==typeof e.toString&&this.broadcastUTF(e)},WebSocketServer.prototype.broadcastUTF=function(e){this.connections.forEach(function(t){t.sendUTF(e)})},WebSocketServer.prototype.broadcastBytes=function(e){this.connections.forEach(function(t){t.sendBytes(e)})},WebSocketServer.prototype.shutDown=function(){this.unmount(),this.closeAllConnections()},WebSocketServer.prototype.handleUpgrade=function(e,t){var o=new WebSocketRequest(t,e,this.config);try{o.readHandshake()}catch(i){return o.reject(i.httpCode?i.httpCode:400,i.message,i.headers),Constants.DEBUG&&console.error(new Date+" WebSocket: Invalid handshake: "+i.message),void 0}o.once("requestAccepted",this._handlers.requestAccepted),!this.config.autoAcceptConnections&&this.listeners("request").length>0?this.emit("request",o):this.config.autoAcceptConnections?o.accept(o.requestedProtocols[0],o.origin):o.reject(404,"No handler is configured to accept the connection.")},WebSocketServer.prototype.handleRequestAccepted=function(e){var t=this;e.once("close",function(o,i){t.handleConnectionClose(e,o,i)}),this.connections.push(e),this.emit("connect",e)},WebSocketServer.prototype.handleConnectionClose=function(e,t,o){var i=this.connections.indexOf(e);-1!==i&&this.connections.splice(i,1),this.emit("close",e,t,o)},module.exports=WebSocketServer;