function WebSocketClient(e){switch(this.config={maxReceivedFrameSize:1048576,maxReceivedMessageSize:8388608,fragmentOutgoingMessages:!0,fragmentationThreshold:16384,webSocketVersion:13,assembleFragments:!0,disableNagleAlgorithm:!0,closeTimeout:5e3,tlsOptions:{}},e&&extend(this.config,e),"websocketVersion"in this.config&&(console.dir(this.config),deprecation.warn("websocketVersionConfig"),this.config.webSocketVersion=this.config.websocketVersion),Object.defineProperty(this.config,"websocketVersion",{set:function(e){deprecation.warn("websocketVersionConfig"),this.webSocketVersion=e},get:function(){return deprecation.warn("websocketVersionConfig"),this.webSocketVersion}}),this.config.webSocketVersion){case 8:case 13:break;default:throw Error("Requested webSocketVersion is not supported. Allowed values are 8 and 13.")}this.readyState=INIT}var deprecation=require("./Deprecation"),nodeVersion=process.version.slice(1).split(".").map(function(e){return parseInt(e,10)}),isNode0_4_x=0===nodeVersion[0]&&4===nodeVersion[1],isGreaterThanNode0_4_x=nodeVersion[0]>0||0===nodeVersion[0]&&nodeVersion[1]>4,extend=require("./utils").extend,util=require("util"),EventEmitter=require("events").EventEmitter,http=require("http"),https=require("https"),url=require("url"),crypto=require("crypto"),WebSocketConnection=require("./WebSocketConnection");const INIT=-1,CONNECTING=0,OPEN=1,CLOSING=2,CLOSED=3;var ID_COUNTER=0,protocolSeparators=["(",")","<",">","@",",",";",":","\\",'"',"/","[","]","?","=","{","}"," ",String.fromCharCode(9)];util.inherits(WebSocketClient,EventEmitter),WebSocketClient.prototype.connect=function(e,o,t,r){function i(e){n.emit("connectFailed",e)}var n=this;if("string"==typeof o&&(o=[o]),o instanceof Array||(o=[]),this.protocols=o,this.origin=t,this.url="string"==typeof e?url.parse(e):e,!this.url.protocol)throw Error("You must specify a full WebSocket URL, including protocol.");if(!this.url.host)throw Error("You must specify a full WebSocket URL, including hostname.  Relative URLs are not supported.");this.secure="wss:"===this.url.protocol,this.protocols.forEach(function(e){for(var o=0;e.length>o;o++){var t=e.charCodeAt(o),r=e.charAt(o);if(33>t||t>126||-1!==protocolSeparators.indexOf(r))throw Error("Protocol list contains invalid character '"+String.fromCharCode(t)+"'")}});var s={"ws:":"80","wss:":"443"};this.url.port||(this.url.port=s[this.url.protocol]);for(var a=new Buffer(16),c=0;16>c;c++)a[c]=Math.round(255*Math.random());this.base64nonce=a.toString("base64");var l=this.url.hostname;("ws:"===this.url.protocol&&"80"!==this.url.port||"wss:"===this.url.protocol&&"443"!==this.url.port)&&(l+=":"+this.url.port);var p={};extend(p,r||{}),extend(p,{Upgrade:"websocket",Connection:"Upgrade","Sec-WebSocket-Version":this.config.webSocketVersion.toString(10),"Sec-WebSocket-Key":this.base64nonce,Host:l}),this.protocols.length>0&&(p["Sec-WebSocket-Protocol"]=this.protocols.join(", ")),this.origin&&(13===this.config.webSocketVersion?p.Origin=this.origin:8===this.config.webSocketVersion&&(p["Sec-WebSocket-Origin"]=this.origin));var u=this.url.pathname;if(this.url.search&&(u+=this.url.search),isNode0_4_x){if(this.secure)throw Error("TLS connections are not supported under Node 0.4.x.  Please use 0.6.2 or newer.");var d=http.createClient(this.url.port,this.url.hostname);d.on("error",i),d.on("upgrade",function(e,o,t){d.removeListener("error",i),n.socket=o,n.response=e,n.firstDataChunk=t,n.validateHandshake()});var h=d.request(u,p)}else{if(!isGreaterThanNode0_4_x)throw Error("Unsupported Node version "+process.version);var f={hostname:this.url.hostname,port:this.url.port,method:"GET",path:u,headers:p,agent:!1};if(this.secure){["key","passphrase","cert","ca","rejectUnauthorized"].forEach(function(e){n.config.tlsOptions.hasOwnProperty(e)&&(f[e]=n.config.tlsOptions[e])});var h=https.request(f)}else var h=http.request(f);h.on("upgrade",function(e,o,t){h.removeListener("error",i),n.socket=o,n.response=e,n.firstDataChunk=t,n.validateHandshake()}),h.on("error",i)}h.on("response",function(e){var o=[];for(var t in e.headers)o.push(t+": "+e.headers[t]);n.failHandshake("Server responded with a non-101 status: "+e.statusCode+"\nResponse Headers Follow:\n"+o.join("\n")+"\n")}),h.end()},WebSocketClient.prototype.validateHandshake=function(){var e=this.response.headers;if(this.protocols.length>0){if(this.protocol=e["sec-websocket-protocol"],!this.protocol)return this.failHandshake("Expected a Sec-WebSocket-Protocol header."),void 0;if(-1===this.protocols.indexOf(this.protocol))return this.failHandshake("Server did not respond with a requested protocol."),void 0}if(!e.connection||"upgrade"!==e.connection.toLocaleLowerCase())return this.failHandshake("Expected a Connection: Upgrade header from the server"),void 0;if(!e.upgrade||"websocket"!==e.upgrade.toLocaleLowerCase())return this.failHandshake("Expected an Upgrade: websocket header from the server"),void 0;var o=crypto.createHash("sha1");o.update(this.base64nonce+"258EAFA5-E914-47DA-95CA-C5AB0DC85B11");var t=o.digest("base64");return e["sec-websocket-accept"]?e["sec-websocket-accept"]!==t?(this.failHandshake("Sec-WebSocket-Accept header from server didn't match expected value of "+t),void 0):(this.succeedHandshake(),void 0):(this.failHandshake("Expected Sec-WebSocket-Accept header from server"),void 0)},WebSocketClient.prototype.failHandshake=function(e){this.socket&&this.socket.writable&&this.socket.end(),this.emit("connectFailed",Error(e))},WebSocketClient.prototype.succeedHandshake=function(){var e=new WebSocketConnection(this.socket,[],this.protocol,!0,this.config);e.webSocketVersion=this.config.webSocketVersion,Object.defineProperty(e,"websocketVersion",{get:function(){return deprecation.warn("websocketVersion"),this.webSocketVersion}}),this.emit("connect",e),this.firstDataChunk.length>0&&e.handleSocketData(this.firstDataChunk),this.firstDataChunk=null},module.exports=WebSocketClient;