(function(e){return"object"==typeof global?e.exports={"":function(){}}:(e.exports={"test connecting the socket and disconnecting":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.on("connect",function(){t.disconnect(),e()})},"test receiving messages":function(e){var t=create(),n=!1,o=0;t.on("error",function(e){throw Error(e||"Received an error")}),t.on("connect",function(){n=!0}),t.on("message",function(e){(++o+"").should().equal(e)}),t.on("disconnect",function(t){n.should().be_true,o.should().equal(3),t.should().eql("booted"),e()})},"test sending messages":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.on("connect",function(){t.send("echo"),t.on("message",function(n){n.should().equal("echo"),t.disconnect(),e()})})},"test acks sent from client":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.on("connect",function(){t.on("message",function(n){"tobi 2"==n&&(t.disconnect(),e())})})},"test acks sent from server":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.on("connect",function(){t.send("ooo",function(){t.disconnect(),e()})})},"test connecting to namespaces":function(e){function t(){o.of("").disconnect(),i.should().equal(3),e()}var n=create(),o=n.socket,r=2,i=0;o.on("connect",function(){i++}),o.of("/woot").on("connect",function(){i++}).on("message",function(e){e.should().equal("connected to woot"),--r||t()}).on("error",function(e){throw Error(e||"Received an error")}),o.of("/chat").on("connect",function(){i++}).on("message",function(e){e.should().equal("connected to chat"),--r||t()}).on("error",function(e){throw Error(e||"Received an error")})},"test disconnecting from namespaces":function(e){function t(){n.of("").disconnect(),e()}var n=create().socket,o=2;n.of("/a").on("error",function(e){throw Error(e||"Received an error")}),n.of("/a").on("connect",function(){n.of("/a").disconnect()}),n.of("/a").on("disconnect",function(){--o||t()}),n.of("/b").on("error",function(e){throw Error(e||"Received an error")}),n.of("/b").on("connect",function(){n.of("/b").disconnect()}),n.of("/b").on("disconnect",function(){--o||t()})},"test authorizing for namespaces":function(e){var t=create().socket;t.of("/a").on("connect_failed",function(){e()}).on("error",function(e){throw Error(e||"Received an error")})},"test sending json from server":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.on("message",function(n){n.should().eql(3141592),t.disconnect(),e()})},"test sending json from client":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.json.send([1,2,3]),t.on("message",function(n){n.should().equal("echo"),t.disconnect(),e()})},"test emitting an event from server":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.on("woot",function(){t.disconnect(),e()})},"test emitting an event to server":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.emit("woot"),t.on("echo",function(){t.disconnect(),e()})},"test emitting multiple events at once to the server":function(e){var t=create();t.on("connect",function(){t.emit("print","foo"),t.emit("print","bar")}),t.on("done",function(){t.disconnect(),e()})},"test emitting an event from server and sending back data":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.on("woot",function(n,o){n.should().eql(1),o("test"),t.on("done",function(){t.disconnect(),e()})})},"test emitting an event to server and sending back data":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.emit("tobi",1,2,function(n){n.should().eql({hello:"world"}),t.disconnect(),e()})},"test encoding a payload":function(e){var t=create("/woot");t.on("error",function(e){throw Error(e||"Received an error")}),t.on("connect",function(){t.socket.setBuffer(!0),t.send("ñ"),t.send("ñ"),t.send("ñ"),t.send("ñ"),t.socket.setBuffer(!1)}),t.on("done",function(){t.disconnect(),e()})},"test sending query strings to the server":function(e){var t=create("?foo=bar");t.on("error",function(e){throw Error(e||"Received an error")}),t.on("message",function(n){n.query.foo.should().eql("bar"),t.disconnect(),e()})},"test sending newline":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.send("\n"),t.on("done",function(){t.disconnect(),e()})},"test sending unicode":function(e){var t=create();t.on("error",function(e){throw Error(e||"Received an error")}),t.json.send({test:"☃"}),t.on("done",function(){t.disconnect(),e()})},"test webworker connection":function(e){if(!window.Worker)return e();var t=new Worker("/test/worker.js");t.postMessage(uri()),t.onmessage=function(t){if("done!"==t.data)return e();throw Error("Unexpected message: "+t.data)}}},void 0)})("undefined"==typeof module?module={}:module,"undefined"==typeof io?require("socket.io-client"):io,"undefined"==typeof should?require("should-browser"):should);