(function(e,t,n){e.exports={"add listeners":function(){var e=new t.EventEmitter,n=0;e.on("test",function(e,t){++n,e.should().eql("a"),t.should().eql("b")}),e.emit("test","a","b"),n.should().eql(1),e.on.should().eql(e.addListener)},"remove listener":function(){function e(){}var n=new t.EventEmitter;n.on("test",e),n.on("test:more",e),n.removeAllListeners("test"),n.listeners("test").should().eql([]),n.listeners("test:more").should().eql([e])},"remove all listeners with no arguments":function(){function e(){}var n=new t.EventEmitter;n.on("test",e),n.on("test:more",e),n.removeAllListeners(),n.listeners("test").should().eql([e]),n.listeners("test:more").should().eql([e])},"remove listeners functions":function(){function e(){++i}function n(){++i}function o(){++i}var r=new t.EventEmitter,i=0;r.on("one",e),r.removeListener("one",e),r.listeners("one").should().eql([]),r.on("two",n),r.removeListener("two",e),r.listeners("two").should().eql([n]),r.on("three",o),r.on("three",n),r.removeListener("three",o),r.listeners("three").should().eql([n])},"number of arguments":function(){var e=new t.EventEmitter,n=[];e.on("test",function(){n.push(arguments.length)}),e.emit("test"),e.emit("test",null),e.emit("test",null,null),e.emit("test",null,null,null),e.emit("test",null,null,null,null),e.emit("test",null,null,null,null,null),[0,1,2,3,4,5].should().eql(n)},once:function(){function e(){n().fail("not removed")}var o=new t.EventEmitter,r=0;o.once("test",function(){++r}),o.emit("test","a","b"),o.emit("test","a","b"),o.emit("test","a","b"),o.once("test:removed",e),o.removeListener("test:removed",e),o.emit("test:removed"),r.should().eql(1)}}})("undefined"==typeof module?module={}:module,"undefined"==typeof io?require("socket.io-client"):io,"undefined"!=typeof should&&should.fail?should:require("should"));